package controllers;

import com.fasterxml.jackson.databind.JsonNode;
import org.metadatacenter.server.Constants;
import org.metadatacenter.server.service.TemplateInstanceService;
import org.metadatacenter.util.JsonObjectUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import play.mvc.Result;

public class TemplateInstanceRepoServerController extends AbstractRepoServerController {
  private static Logger log = LoggerFactory.getLogger(TemplateInstanceRepoServerController.class);

  private static TemplateInstanceService<String, JsonNode> templateInstanceService;

  public static void injectTemplateInstanceService(TemplateInstanceService<String, JsonNode> tis) {
    templateInstanceService = tis;
  }

  public static Result findTemplateInstance(String id) {
    try {
      String templateInstanceId = config.getString(Constants.LINKED_DATA_ID_PATH_BASE) + config.getString(Constants
          .LINKED_DATA_ID_PATH_SUFFIX_TEMPLATE_INSTANCES) + id;
      JsonNode templateInstance = templateInstanceService.findTemplateInstanceByLinkedDataId(templateInstanceId);
      if (templateInstance != null) {
        // Remove autogenerated _id field to avoid exposing it
        templateInstance = JsonObjectUtils.removeField(templateInstance, "_id");
        return ok(templateInstance);
      }
      return notFound();
    } catch (IllegalArgumentException e) {
      return badRequestWithError(e);
    } catch (Exception e) {
      return internalServerErrorWithError(e);
    }
  }

}
