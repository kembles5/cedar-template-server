package controllers;

import com.fasterxml.jackson.databind.JsonNode;
import org.metadatacenter.server.Constants;
import org.metadatacenter.server.service.TemplateFieldService;
import org.metadatacenter.server.service.TemplateInstanceService;
import org.metadatacenter.util.JsonObjectUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import play.mvc.Result;

public class TemplateFieldRepoServerController extends AbstractRepoServerController {
  private static Logger log = LoggerFactory.getLogger(TemplateFieldRepoServerController.class);

  private static TemplateFieldService<String, JsonNode> templateFieldService;

  public static void injectTemplateFieldService(TemplateFieldService<String, JsonNode> tfs) {
    templateFieldService = tfs;
  }

  public static Result findTemplateInstance(String id) {
    try {
      String templateFieldId = config.getString(Constants.LINKED_DATA_ID_PATH_BASE) + config.getString(Constants
          .LINKED_DATA_ID_PATH_SUFFIX_TEMPLATE_FIELDS) + id;
      JsonNode templateInstance = templateFieldService.findTemplateFieldByLinkedDataId(templateFieldId, false);
      if (templateInstance != null) {
        // Remove autogenerated _id field to avoid exposing it
        templateInstance = JsonObjectUtils.removeField(templateInstance, "_id");
        return ok(templateInstance);
      }
      return notFound();
    } catch (IllegalArgumentException e) {
      return badRequestWithError(e);
    } catch (Exception e) {
      return internalServerErrorWithError(e);
    }
  }

}
