package controllers;

import com.fasterxml.jackson.databind.JsonNode;
import org.metadatacenter.server.Constants;
import org.metadatacenter.server.service.TemplateElementService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import play.mvc.Result;
import utils.JsonUtils;

public class TemplateElementRepoServerRepoServerController extends AbstractRepoServerController {
  private static Logger log = LoggerFactory.getLogger(TemplateElementRepoServerRepoServerController.class);

  private static TemplateElementService<String, JsonNode> templateElementService;

  public static void injectTemplateElementService(TemplateElementService<String, JsonNode> tes) {
    templateElementService = tes;
  }

  public static Result findTemplateElement(String id, boolean expanded, boolean validation) {
    try {
      String templateElementId = config.getString(Constants.LINKED_DATA_ID_PATH_BASE) + config.getString(Constants
          .LINKED_DATA_ID_PATH_SUFFIX_TEMPLATE_ELEMENTS) + id;
      JsonNode templateElement = templateElementService.findTemplateElementByLinkedDataId(templateElementId, expanded,
          validation);
      if (templateElement != null) {
        // Remove autogenerated _id field to avoid exposing it
        templateElement = JsonUtils.removeField(templateElement, "_id");
        return ok(templateElement);
      }
      return notFound();
    } catch (IllegalArgumentException e) {
      return badRequestWithError(e);
    } catch (Exception e) {
      return internalServerErrorWithError(e);
    }
  }


}
