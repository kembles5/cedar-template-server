package controllers;

import com.fasterxml.jackson.databind.JsonNode;
import org.metadatacenter.server.Constants;
import org.metadatacenter.server.service.TemplateService;
import org.metadatacenter.util.JsonObjectUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import play.mvc.Result;

public class TemplateRepoServerRepoServerController extends AbstractRepoServerController {
  private static Logger log = LoggerFactory.getLogger(TemplateRepoServerRepoServerController.class);

  private static TemplateService<String, JsonNode> templateService;

  public static void injectTemplateService(TemplateService<String, JsonNode> ts) {
    templateService = ts;
  }

  public static Result findTemplate(String id, boolean expanded, boolean validation) {
    log.info("Received findTemplate request with ID " + id);
    try {
      String templateId = config.getString(Constants.LINKED_DATA_ID_PATH_BASE) + config.getString(Constants
          .LINKED_DATA_ID_PATH_SUFFIX_TEMPLATES) + id;
      JsonNode template = templateService.findTemplateByLinkedDataId(templateId, expanded, validation);
      if (template != null) {
        // Remove autogenerated _id field to avoid exposing it
        template = JsonObjectUtils.removeField(template, "_id");
        return ok(template);
      }
      return notFound();
    } catch (IllegalArgumentException e) {
      return badRequestWithError(e);
    } catch (Exception e) {
      return internalServerErrorWithError(e);
    }
  }

}
